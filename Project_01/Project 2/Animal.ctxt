#BlueJ class context
comment0.params=name\ type\ symbol\ energySources\ energy\ stats\ birthEnergy\ maxEnergy\ livingEnergy\ x\ y\ controller
comment0.target=Animal(java.lang.String,\ java.lang.String,\ char,\ java.util.ArrayList,\ double,\ java.util.ArrayList,\ double,\ double,\ double,\ int,\ int,\ Controller)
comment1.params=dGen\ terrain\ habitants
comment1.target=void\ move(DirectionGenerator,\ Terrain,\ java.util.ArrayList)
comment1.text=\n\ @desc\ animal's\ moving\ functionality\ -\ this\ method\n\ gets\ a\ new\ direction\ from\ DirectionGenerator,\ if\n\ moving\ to\ that\ direction\ causes\ getting\ outside\ of\ board\n\ it\ recursively\ calls\ itself\ again,\ if\ that's\ not\ the\ case\n\ it\ moves\ to\ moveHelper\ method\ to\ cause\ movement.\n\ @param\ DirectionGenerator\ dGen\ -\ Direction\ Random\ Generator\n\ @param\ Terrain\ terrain\ -\ board\ of\ our\ world\n\ @param\ ArrayList<Specimen>\ habitants\ -\ list\ of\ all\ the\ specimen\n
comment2.params=terrain
comment2.target=boolean\ locked(Terrain)
comment2.text=\n\ @desc\ this\ method\ checks\ if\ specimen\ is\ locked(each\ adjecent\ cell\ \n\ is\ occupied\ by\ 2\ specimen\ or\ with\ the\ animal\ which\ is\ not\ among\ \n\ energy\ sources\ of\ current\ specimen),\ it\ discusses\ 9\ places\ specimen\n\ can\ be\:\ left,\ right,\ top\ or\ down\ side\ of\ board,\ or\ upper-left,\ upper-right,\n\ lower-left,\ lower-right\ corners\ or\ none\ of\ those.\n\ @param\ Terrain\ terrain\ -\ board\ of\ our\ world\n\ @return\ boolean\ -\ true\ if\ locked,\ false\ if\ not\n
comment3.params=terrain\ x\ y
comment3.target=boolean\ lockedHelper(Terrain,\ int,\ int)
comment3.text=\n\ @desc\ check\ if\ specimen\ can\ move\ to\ the\ cell\ (x,\ y).\n\ if\ it\ has\ at\ least\ two\ specimen\ already\ or\ or\ contains\ \n\ one\ specimen\ which\ is\ not\ among\ the\ energy\ sources\ of\n\ our\ current\ specimen,\ we\ can\ not\ move\ there.\n\ @param\ Terrain\ terrain\ -\ board\ of\ our\ world\n\ @param\ int\ x\ -\ x\ coordinate\ of\ the\ cell\ we\ should\ check\n\ @param\ int\ y\ -\ y\ coordinate\ of\ the\ cell\ we\ should\ check\n\ @return\ boolean\ -\ true\ if\ the\ cell\ contains\ at\ least\ 2\ specimen\n\ or\ contains\ one\ specimen\ which\ is\ not\ among\ the\ energy\ sources\ of\n\ our\ current\ specimen\n
comment4.params=dGen\ terrain\ habitants\ x\ y
comment4.target=void\ moveHelper(DirectionGenerator,\ Terrain,\ java.util.ArrayList,\ int,\ int)
comment4.text=\n\ @desc\ this\ method\ check\ if\ specimen\ is\ locked,\ if\ not\ then\ \n\ checks\ if\ it\ can\ move\ to\ the\ cell\ (x,y),\ if\ not\ calls\ move()\ \n\ method,\ if\ it\ can\ move\ to\ that\ cell,\ then\ just\ removes\ specimen\n\ from\ existing\ location\ and\ adds\ to\ new\ location.\n\ @param\ DirectionGenerator\ dGen\ -\ Direction\ generator,\ which\n\ is\ used\ to\ pass\ move()\ method\ as\ argument\ if\ it\ is\ called\ again\n\ @param\ Terrain\ terrain\ -\ board\ of\ our\ world\n\ @param\ ArrayList<Specimen>\ habitants\ -\ list\ of\ all\ our\ habitants\n\ @param\ int\ x\ -\ x\ coordinate\ of\ the\ cell\ we\ should\ move\ to\n\ @param\ int\ y\ -\ y\ coordinate\ of\ the\ cell\ we\ should\ move\ to\n
comment5.params=terrain\ habitants
comment5.target=void\ eat(Terrain,\ java.util.ArrayList)
comment5.text=\n\ @desc\ animal's\ eating\ functionality\ -\ this\ method\n\ allows\ animal\ to\ eat\ food\ and\ increase\ energy,\ if\ it's\ \n\ still\ alive(energy\ >\ 0)\ and\ does\ not\ already\ have\ max\ \n\ energy,\ if\ adding\ food\ energy\ gives\ plant\ more\ energy\ \n\ than\ max\ energy,\ specimen's\ energy\ is\ still\ left\ to\ max\n\ energy.\ In\ addition,\ it\ considers\ that\ specimen\ in\ the\ cell\n\ may\ be\ already\ dead(energy\ <\ 0),\ in\ which\ case\ that\ specimen\n\ can\ not\ be\ eaten\ anymore.\n\ @param\ Terrain\ terrain\ -\ our\ board\ of\ specimen\n\ @param\ ArrayList<Specimen>\ habitants\ -\ list\ of\ all\ the\ habitants\n
numComments=6
